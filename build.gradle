plugins {
    id 'java'
    id 'idea'
    id 'maven-publish'
}

group 'com.bitmart'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenLocal()
    maven { url "https://repo1.maven.org/maven2/" }
    mavenCentral()
}

dependencies {

    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.0.1'
    implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.0'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.1'
    implementation group: 'commons-codec', name: 'commons-codec', version: '1.12'

    implementation('com.google.guava:guava:25.1-jre')
    implementation('com.squareup.okhttp3:okhttp:3.12.0')
    implementation('com.squareup.okhttp3:logging-interceptor:3.12.1')
    implementation('io.netty:netty-all:4.1.22.Final')

    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.61'
    compileOnly 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'
    implementation 'log4j:log4j:1.2.17'
    implementation 'org.slf4j:slf4j-log4j12:1.6.6'
    testImplementation('org.junit.jupiter:junit-jupiter:5.6.0')
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

task(unproxy) {
    System.setProperty("socksProxyHost", "")
    System.setProperty("socksProxyPort", "")
}

publishing {
    publications {
        customLibrary(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            name = 'bitmart-api-lib'
            url = layout.buildDirectory.dir("repo")
        }
    }
}

/*pom.withXml {
    asNode()
            .dependencies
            .dependency
            .findAll { dependency ->
                // find all dependencies with runtime scope
                dependency.scope.text() == 'runtime'
            }
            .each { dependency ->
                // set the scope to 'compile'
                dependency.scope*.value = 'compile'
            }
}*/
compileJava.dependsOn(unproxy)